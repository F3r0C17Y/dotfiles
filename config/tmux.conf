# get TMUX_VERSION

##########
# GLOBAL
##########

# set Zsh as your default Tmux shell
set-option -g default-shell /bin/zsh

# colors
#set-option -g default-terminal "screen-256color"
#set-option -g pane-active-border-fg green
set -g clock-mode-style 12
set -g base-index 1
setw -g pane-base-index 1


# large history
set-option -g history-limit 20000

# zero delays
set -sg escape-time 0

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy 'y' copy-pipe "reattach-to-user-namespace pbcopy"
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# basic settings
setw -g mouse on

unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter \
    send -X cancel

# Drag and Drop Select & Copy (Selection)
bind-key -T copy-mode-vi MouseDragEnd1Pane \
        send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
        send-keys -X no-clear

# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
        select-pane \; \
        send-keys -X select-word \; \
        send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
        send-keys -X no-clear
bind-key -n DoubleClick1Pane \
        select-pane \; \
        copy-mode -M \; \
        send-keys -X select-word \; \
        send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
        send-keys -X no-clear

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
        select-pane \; \
        send-keys -X select-line \; \
        send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
        send-keys -X no-clear
bind-key -n TripleClick1Pane \
        select-pane \; \
        copy-mode -M \; \
        send-keys -X select-line \; \
        send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
        send-keys -X no-clear

# Middle click to paste from the primary buffer
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# Shift insert to paste from the clipboard
unbind-key S-IC
bind-key S-IC run "tmux set-buffer \"$(xclip -o -sel c)\"; tmux paste-buffer"


###########################################################################
# Status Bar
############################################################################
#set-option -g status-justify right
#set-option -g status-bg black
#set-option -g status-fg cyan

#set -g status-interval 5
#set -g status-left "#[fg=magenta]» #[fg=green,bold]#(echo $USER)#[fg=red,bold] @ #[fg=blue,bold]#T#[fg=cyan] » #[fg=magenta,bg=black]#(tmux-mem-cpu-load --graph-lines 20 --interval 5)#[default]"
#set -g status-left-length 100

#set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]"
#set-option -g visual-activity on

# Titles (window number, program name, active (or not)
#set-option -g set-titles on
#set-option -g set-titles-string '#H:#S.#I.#P #W #T'

source "REPLACE_DIR_ME/powerline/bindings/tmux/powerline.conf"


############################################################################
# Unbindings
############################################################################
unbind j
unbind Up
unbind Down
unbind Left
unbind Right

############################################################################
# Bindings
############################################################################
# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key _ split-window -h # split pane vertically

# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
#bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
bind C-h previous-window
bind C-l next-window
bind A command-prompt "rename-window %%"

# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# vim keys to resize panes
bind -r C-h resize-pane -L 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-l resize-pane -R 1

# use vim motion keys while in copy mode
setw -g mode-keys vi

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

