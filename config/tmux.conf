##########
# GLOBAL
##########

# set Zsh as your default Tmux shell
set-option -g default-shell /bin/zsh

# colors
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ",tmux-256color:RGB"
#set-option -g pane-active-border-fg green
set -g clock-mode-style 12
set -g base-index 1
setw -g pane-base-index 1

# large history
set-option -g history-limit 20000

# zero delays
set -sg escape-time 0

# basic settings
setw -g mouse on

unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter \
    send -X cancel

###########################################################################
# Status Bar
############################################################################
source "/usr/share/powerline/bindings/tmux/powerline.conf"

set-option -g status-position bottom

############################################################################
# Unbindings
############################################################################
unbind j
unbind Up
unbind Down
unbind Left
unbind Right

############################################################################
# Bindings
############################################################################

# change default meta key to screen on
unbind C-b
#unbind C-a
set -g prefix C-a
bind C-a send-prefix
# toggle last windows by double tab
#bind-key C-b last-window
bind-key C-a last-window

# send program to background with C-z
bind-key C-z send-keys C-z

# use z for nested
#bind-key -n C-z send-prefix


# new split in current pane (horizontal / vertical)
unbind |
# split pane horizontally
bind | split-window -h -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"
bind 'C-\' split-window -h -c "#{pane_current_path}"
# split pane vertically
bind-key - split-window -v -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"
# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

#previous pane
bind-key -n C-up prev
bind-key -n C-left prev

#next pane
bind-key -n C-right next
bind-key -n C-down next

############################################################################
# windows
############################################################################
bind C-h previous-window
bind C-l next-window
bind A command-prompt "rename-window %%"

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------

# vim keys to resize panes
bind -r C-h resize-pane -L 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-l resize-pane -R 1

# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# use vim motion keys while in copy mode
setw -g mode-keys vi
set -g status-keys vi

# Reload config
bind r source-file ~/.tmux.conf

############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window

############################################################################
# Plugins
############################################################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# set tmux-yank options
set -g @yank_with_mouse on


# Penetration Testing
setenv -g py "if which python >/dev/null; then PYVERSION=python; elif which python3; then PYVERSION=python3; else echo 'No Python version found'; return 1; fi; \$PYVERSION -c 'import pty; pty.spawn(\"/bin/bash\")'"
setenv -g pysh "if which python >/dev/null; then PYVERSION=python; elif which python3; then PYVERSION=python3; else echo 'No Python version found'; return 1; fi; \$PYVERSION -c 'import pty; pty.spawn(\"/bin/sh\")'"
setenv -g shellexport "export PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/sbin/:/sbin/:/bin:/usr/lib/jvm/default/bin:\$PATH; export TERM=xterm; alias la='ls -lsaht --color=auto'; alias ll='ls -lsaht --color=auto'"
setenv -g ttysize "rows=$(stty size | cut -d ' ' -f1); columns=$(stty size | cut -d ' ' -f2); stty columns \$columns rows \$rows"

# Usage: First C-aq to spawn a tty, afterwards use C-q to stabilize the tty
bind C-q send $py Enter
bind -n C-q send C-z "stty raw -echo; fg; reset" Enter $ttysize Enter $shellexport Enter
